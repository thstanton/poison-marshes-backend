generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  confirmed Boolean  @default(false)
  account   Account?
  accountId Int?
}

model Account {
  id        Int      @id @default(autoincrement())
  name      String
  password  String
  isAdmin   Boolean  @default(false)
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId    Int      @unique
  game      Game?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Game {
  id        Int      @id @default(autoincrement())
  account   Account  @relation(fields: [accountId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  accountId Int      @unique
  level     Level    @relation(fields: [levelId], references: [id])
  levelId   Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Level {
  id          Int      @id @unique
  act         Int
  name        String
  flavourText String
  task        String
  solution    String?
  hint        String[]
  email       Email?
  videoUrl    String?
  Account     Game[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Email {
  id        Int      @id @default(autoincrement())
  from      String
  subject   String
  text      String
  html      String
  level     Level?   @relation(fields: [levelId], references: [id])
  levelId   Int?     @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
